// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let customVerifier = artifacts.require('CustomVerifier');

// - use the contents from proof.json generated from zokrates steps
let proof = require('../../zokrates/code/square/proof.json');

contract('TestSquareVerifier', accounts => {

    const account = accounts[0];

    describe('Test verification with correct proof', function () {

        it('verification with correct proof', async function () {

            const contractCustomVerifier = await customVerifier.new({ from: account });
    		const {a, b, c} = proof.proof;
            let result = await contractCustomVerifier.verifyTx.call(a, b, c, proof.inputs, { from: account });

            assert(result, "Proof is incorrect");
        });

        it('Test verification with incorrect proof', async function () {
            let incorrectInputs = [-1, 5];

            const contractCustomVerifier = await customVerifier.new({ from: account });
    		const {a, b, c} = proof.proof;
            let result = await contractCustomVerifier.verifyTx.call(a, b, c, incorrectInputs, { from: account });

            assert(!result, "Proof is incorrect");
        })
    })
});